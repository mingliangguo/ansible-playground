---
# - name: add apt repos
#   apt_repository:
#     repo: ppa:webupd8team/java
- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
  become: true

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'apt-transport-https', 'ca-certificates', 'python3-pip', 'virtualenv', 'python3-setuptools']
  become: true

- name: install packages
  apt:
    name: [ 'vim', 'unzip', 'curl', 'byobu', 'bash-completion', 'nodejs', 'jq', 'git', 'openjdk-11-jdk', 'gradle', 'neovim', 'software-properties-common', 'ripgrep', 'build-essential', 'libssl-dev', 'libffi-dev', 'python3-dev', 'python3-venv', 'awscli', 'make', 'zlib1g-dev', 'libreadline-dev', 'libbz2-dev', 'libsqlite3-dev', 'wget', 'llvm', 'libncurses5-dev' ]
    state: present
  become: true

- name: install snap packages
  snap:
    name: 
      - kubectl
    classic: true
  become: true

- name: 'clone fzf'
  shell: 'git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && yes | ~/.fzf/install'
  args:
    creates: ~/.fzf
- name: 'install  fpp'
  shell: 'git clone https://github.com/facebook/PathPicker.git && cd PathPicker && sudo ln -s "$(pwd)/fpp" /usr/local/bin/fpp'
  args:
    creates: ~/PathPicker
- name: 'enable vim editor in cli'
  shell: |
    echo "export EDITOR=vim" >> ~/.bashrc
    echo "set -o vi" >> ~/.bashrc

# - name: Install KIND
#   get_url:
#     url: https://github.com/kubernetes-sigs/kind/releases/download/{{ kind_version }}/kind-linux-amd64
#     dest: /usr/local/bin/kind
#     mode: 0755
#   become: true

- name: Install stern
  get_url:
    url: https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64
    dest: /usr/local/bin/stern
    mode: 0755
  become: true

# - name: Download the argo-cli and install it
#   unarchive:
#     src: https://github.com/argoproj/argo/releases/download/v2.10.1/argo-linux-amd64.gz
#     dest: /usr/local/bin
#     remote_src: yes
#   become: true
#   ignore_errors: yes
#
- name: Check if kubectl is installed
  shell: command -v kubectl >/dev/null 2>&1
  register: is_kubectl_exist
  ignore_errors: yes

- name: 'enable auto completion for kubectl'
  shell: |
    echo "source <(kubectl completion bash)" >> ~/.bashrc
  when: is_kubectl_exist.rc == 0
# - name: 'enable byobu colorful prompt, the byobu-enable still has problems after this... need to fix it'
#   command: 'byobu-enable-prompt && byobu-enable'
